{"version":3,"sources":["components/MovieCard.js","App.js","config.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","poster_path","alt","src","year","film_name_zh","film_name_en","movie_id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","useState","prize","setPrize","selectPrize","e","btnValue","target","value","console","log","MovieCards","CannesFilm","filter","obj","sort","a","b","map","data","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kk6BAyBeA,MAvBf,SAAmBC,GACjB,OACE,gCACyB,OAAtBA,EAAMC,YAEL,mDAGA,qBACEC,IAAI,SACJC,IAAG,wCAAmCH,EAAMC,eAIhD,gCACGD,EAAMI,KACNJ,EAAMK,aACNL,EAAMM,kBAfDN,EAAMO,W,cCKpBC,IAASC,cCRa,CACpBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CD8EMC,MA3Ef,SAAajB,GAAO,MAGQkB,mBAAS,cAHjB,mBAGXC,EAHW,KAGJC,EAHI,KAKlB,SAASC,EAAYC,GACnB,IAAIC,EAAWD,EAAEE,OAAOC,MACxBL,EAASG,GACTG,QAAQC,IAAIJ,GAGd,IAAMK,EACJ,8BACGC,EAEEC,QAAO,SAACC,GAAD,OAASA,EAAIZ,QAAUA,KAE9Ba,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7B,KAAO8B,EAAE9B,KAAO,GAAK,KAEvC+B,KAAI,SAACC,GAAD,OACH,cAAC,EAAD,CAEEhC,KAAMgC,EAAKhC,KACXG,SAAU6B,EAAK7B,SACfF,aAAc+B,EAAK/B,aACnBC,aAAc8B,EAAK9B,aACnBL,YAAamC,EAAKnC,aALbmC,EAAK7B,eAsCpB,OACE,8BACE,gCAEE,wBAAQ8B,KAAK,SAASZ,MAAM,oBAAoBa,QAASjB,EAAzD,wDAGA,wBAAQgB,KAAK,SAASZ,MAAM,aAAaa,QAASjB,EAAlD,iDAGA,8BAAMO,UEpECW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.113ac772.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction MovieCard(props) {\n  return (\n    <div key={props.movie_id}>\n      {props.poster_path === null ? (\n        // if poster_path was null\n        <div>poster not found</div>\n      ) : (\n        // if data has poster_path, then render the picture\n        <img\n          alt=\"poster\"\n          src={`http://image.tmdb.org/t/p/w342${props.poster_path}`}\n        />\n      )}\n\n      <div>\n        {props.year}\n        {props.film_name_zh}\n        {props.film_name_en}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","import \"./App.scss\";\nimport CannesFilm from \"./CannesFilm.json\";\nimport MovieCard from \"./components/MovieCard\";\nimport React, { useState } from \"react\";\n// import app from \"firebase/app\";\nimport firebase from \"firebase\";\nimport { config } from \"./config\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp(config);\n\nfunction App(props) {\n  //  const fs = require(\"fs\");\n  //  const db = firebase.firestore();\n  const [prize, setPrize] = useState(\"palme_d_or\");\n\n  function selectPrize(e) {\n    let btnValue = e.target.value;\n    setPrize(btnValue);\n    console.log(btnValue);\n  }\n\n  const MovieCards = (\n    <div>\n      {CannesFilm\n        //  choose certian prize\n        .filter((obj) => obj.prize === prize)\n        // sort the data by year\n        .sort((a, b) => (a.year > b.year ? 1 : -1))\n        // render each\n        .map((data) => (\n          <MovieCard\n            key={data.movie_id}\n            year={data.year}\n            movie_id={data.movie_id}\n            film_name_zh={data.film_name_zh}\n            film_name_en={data.film_name_en}\n            poster_path={data.poster_path}\n          />\n        ))}\n    </div>\n  );\n\n  //  get tmdb movie detail\n  //  function tmdbMovieDetail(movie_id) {\n  //     return new Promise((resolve, reject) => {\n  //        let xhr = new XMLHttpRequest();\n  //        xhr.open(\"GET\", `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${apiKey}&language=en-US`);\n  //        xhr.onload = () => resolve(xhr.responseText);\n  //        xhr.onerror = () => reject(xhr.statusText);\n  //        xhr.send();\n  //     });\n  //  }\n\n  //  get movie id & data\n  //  function readData() {\n  //     console.log(value);\n  //     let ref = db.collection(\"cannes_film\").doc(\"palme_d_or\");\n\n  //     ref.get().then((doc) => {\n  //        setData(doc.data()[value]);\n  //        let movieId = posterData[\"movie_id\"];\n  //        console.log(movieId);\n  //        tmdbMovieDetail(movieId);\n  //        console.log(\"OK\");\n  //        setTitleZh(posterData[\"film_name_zh\"]);\n  //        setTitleEn(posterData[\"film_name_en\"]);\n  //     });\n  //  }\n\n  return (\n    <div>\n      <div>\n        {/* <input type=\"text\" value={props.value} onChange={handleChange} /> */}\n        <button type=\"button\" value=\"un_certain_regard\" onClick={selectPrize}>\n          Un Certain Regard 一種注目\n        </button>\n        <button type=\"button\" value=\"palme_d_or\" onClick={selectPrize}>\n          Palme d'Or 金棕櫚獎\n        </button>\n        <div>{MovieCards}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// firebase SDK\nexport const config = {\n  apiKey: \"AIzaSyBmbHqONy7XHhbAJgi7XI8Zb6xrKcDQ9NM\",\n  authDomain: \"film-db-9936d.firebaseapp.com\",\n  databaseURL: \"https://film-db-9936d.firebaseio.com\",\n  projectId: \"film-db-9936d\",\n  storageBucket: \"film-db-9936d.appspot.com\",\n  messagingSenderId: \"340728739287\",\n  appId: \"1:340728739287:web:6a5a212fc24c2cd1b18792\",\n};\n\n// TMDb api key\nexport const apiKey = \"5c27dca1cd4fca2cefc5c8945cfb1974\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}